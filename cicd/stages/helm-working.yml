name: $(Build.DefinitionName)_$(Rev:r)

variables:
  - group: 'tftec-app-vars'  # Grupo de variáveis para credenciais do ACR
  - name: containerRegistry
    value: 'acrtftecbrazilsouth27702.azurecr.io'  # Container Registry ACR
  - name: devAzureSubscriptionEndpoint
    value: 'tftec-devops'  # Conexão de serviço AzureRM
  - name: AppName
    value: 'tftec-ao-vivo-sp-2024'  # Nome da aplicação
  - name: HelmChartName
    value: 'tftec-ao-vivo-sp-2024-app-helm'  # Nome do Helm Chart
  - name: HelmRepoName
    value: 'tftec/chart/ao-vivo-sp-2024-helm'  # Nome do repositório Helm no ACR
  - name: dockerfilePath
    value: 'docker/Dockerfile'  # Caminho do Dockerfile
  - name: imageRepository
    value: 'tftec/app/ao-vivo-sp-2024-app'  # Nome do repositório de imagens
  - name: GitVersion.SemVer
    value: ''  # Definir a versão gerada pelo GitVersion
  - name: isMain
    value: true

jobs:
  - job: BuildAndDeploy
    displayName: 'Build and Deploy'
    pool:
      vmImage: 'ubuntu-latest'  # Especifique a imagem do agente se necessário

    steps:
      # Checkout the code with a full clone
      - checkout: self
        clean: true
        fetchDepth: 0  # Desabilitar shallow clone

      # Setup GitVersion
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '7.x'

      - task: gitversion/setup@3.0.0
        displayName: 'Compute version'
        inputs:
          versionSpec: '5.x'
          preferLatestVersion: true

      # Compute version
      - task: gitversion/execute@3.0.0
        displayName: 'Get version'
        inputs:
          additionalArguments: '/overrideconfig mode="Mainline"'

      - task: HelmInstaller@1
        inputs:
          helmVersionToInstall: 'latest'

      # Build Docker image and push to ACR
      - task: Docker@2
        displayName: 'Build and Push Docker image to ACR'
        inputs:
          containerregistrytype: 'Azure Container Registry'
          azureSubscriptionEndpoint: $(devAzureSubscriptionEndpoint)
          azureContainerRegistry: 'acrtftecbrazilsouth27702'
          repository: 'acrtftecbrazilsouth27702.azurecr.io/tftec/app/ao-vivo-sp-2024-app'
          command: 'buildAndPush'  # Comando buildAndPush unifica o processo de build e push
          dockerFile: $(dockerfilePath)
          imageName: '$(imageRepository):$(GitVersion.FullSemVer)'
          buildContext: '$(Build.SourcesDirectory)'  # Mover buildContext para dentro de inputs
          tags: |
            $(GitVersion.FullSemVer)
            latest

      # Build Helm chart
      - task: AzureCLI@2
        displayName: 'Helm package'
        inputs:
          azureSubscription: $(devAzureSubscriptionEndpoint)  # Usar a conexão AzureRM
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          addSpnToEnvironment: true
          inlineScript: |
            # Login to registry
            echo "GitVersion.FullSemVer: $(GitVersion.FullSemVer)"
            CLEANED_SEMVER=$(echo $(GitVersion.FullSemVer) | sed 's/-.*//g')
            echo "Cleaned Semver: $CLEANED_SEMVER"
            
            # Package Helm Chart
            helm package chart --app-version $(GitVersion.FullSemVer) --version $(GitVersion.FullSemVer)

            # Login to Azure Container Registry
            az acr login --name $(containerRegistry)

            # Push the Helm Chart to ACR
            helm push tftec-app-$(GitVersion.FullSemVer).tgz oci://$(containerRegistry)/$(HelmRepoName)
        env:
          HELM_EXPERIMENTAL_OCI: 1
        condition: eq(variables['isMain'], true)
